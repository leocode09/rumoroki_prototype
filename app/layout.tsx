import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { CookiesProvider } from "next-client-cookies/server";
import { Tokens, getTokens } from "next-firebase-auth-edge";
import { cookies } from "next/headers";
import { User } from "@/context/auth-context";
import { filterStandardClaims } from "next-firebase-auth-edge/lib/auth/claims";
import { AuthProvider } from "@/providers/auth-provider";
import { getAuthTokens } from "@/actions/auth";
import { AI } from "@/actions/chat/actions";
import * as ort from "onnxruntime-web"
import { Toaster } from "@/components/ui/toaster";
const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

ort.env.wasm.wasmPaths = {
  "ort-wasm-simd.wasm": "/vad/ort-wasm-simd.wasm",
  "ort-wasm.wasm": "/vad/ort-wasm.wasm",
}
const toUser = ({ decodedToken }: Tokens): User => {
  const {
    uid,
    email,
    picture: photoURL,
    email_verified: emailVerified,
    phone_number: phoneNumber,
    name: displayName,
    source_sign_in_provider: signInProvider,
  } = decodedToken;

  const customClaims = filterStandardClaims(decodedToken);

  return {
    uid,
    email: email ?? null,
    displayName: displayName ?? null,
    photoURL: photoURL ?? null,
    phoneNumber: phoneNumber ?? null,
    emailVerified: emailVerified ?? false,
    providerId: signInProvider,
    customClaims,
  };
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const tokens = await getAuthTokens();
  const user = tokens ? toUser(tokens) : null;
  return (
    <html lang="en">
      <body className="dark">
        <CookiesProvider>
          <AuthProvider user={user}>{children}</AuthProvider>
        </CookiesProvider>
        <Toaster />
      </body>
    </html>
  );
}
